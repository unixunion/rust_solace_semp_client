Only in .: .git
Only in ../solace_semp_client/output/rust/: .swagger-codegen
Only in ../solace_semp_client/output/rust/: .swagger-codegen-ignore
Only in ../solace_semp_client/output/rust/: .travis.yml
Only in .: 9.0.1.7.patch
Only in .: Cargo.lock
diff -upr ../solace_semp_client/output/rust/README.md ./README.md
--- ../solace_semp_client/output/rust/README.md	2019-03-03 08:19:57.000000000 +0100
+++ ./README.md	2019-02-28 14:30:05.000000000 +0100
@@ -6,7 +6,7 @@ SEMP (starting in `v2`, see [note 1](#no
 This API client was generated by the [swagger-codegen](https://github.com/swagger-api/swagger-codegen) project.  By using the [swagger-spec](https://github.com/swagger-api/swagger-spec) from a remote server, you can easily generate an API client.
 
 - API version: 2.10
-- Package version: ${rewrite_version}
+- Package version: 9.0.1.7
 - Build package: io.swagger.codegen.languages.RustClientCodegen
 For more information, please visit [http://www.solace.com](http://www.solace.com)
 
diff -upr ../solace_semp_client/output/rust/src/models/event_threshold.rs ./src/models/event_threshold.rs
--- ../solace_semp_client/output/rust/src/models/event_threshold.rs	2019-03-03 08:19:54.000000000 +0100
+++ ./src/models/event_threshold.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,19 +12,19 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct EventThreshold {
   /// The clear threshold for the value of this counter as percentage of its maximum value. Falling below this value will trigger a corresponding Event.
-  #[serde(rename = "clearPercent")]
+  #[serde(rename = "clearPercent", skip_serializing_if="Option::is_none")]
   clear_percent: Option<i64>,
   /// The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding Event.
-  #[serde(rename = "clearValue")]
+  #[serde(rename = "clearValue", skip_serializing_if="Option::is_none")]
   clear_value: Option<i64>,
   /// The set threshold for the value of this counter as percentage of its maximum value. Exceeding this value will trigger a corresponding Event.
-  #[serde(rename = "setPercent")]
+  #[serde(rename = "setPercent", skip_serializing_if="Option::is_none")]
   set_percent: Option<i64>,
   /// The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding Event.
-  #[serde(rename = "setValue")]
+  #[serde(rename = "setValue", skip_serializing_if="Option::is_none")]
   set_value: Option<i64>
 }
 
diff -upr ../solace_semp_client/output/rust/src/models/event_threshold_by_percent.rs ./src/models/event_threshold_by_percent.rs
--- ../solace_semp_client/output/rust/src/models/event_threshold_by_percent.rs	2019-03-03 08:19:54.000000000 +0100
+++ ./src/models/event_threshold_by_percent.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct EventThresholdByPercent {
   /// The clear threshold for the value of this counter as percentage of its maximum value. Falling below this value will trigger a corresponding Event.
   #[serde(rename = "clearPercent")]
diff -upr ../solace_semp_client/output/rust/src/models/event_threshold_by_value.rs ./src/models/event_threshold_by_value.rs
--- ../solace_semp_client/output/rust/src/models/event_threshold_by_value.rs	2019-03-03 08:19:54.000000000 +0100
+++ ./src/models/event_threshold_by_value.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct EventThresholdByValue {
   /// Threshold clear value.
   #[serde(rename = "clearValue")]
diff -upr ../solace_semp_client/output/rust/src/models/msg_vpn.rs ./src/models/msg_vpn.rs
--- ../solace_semp_client/output/rust/src/models/msg_vpn.rs	2019-03-03 08:19:54.000000000 +0100
+++ ./src/models/msg_vpn.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct MsgVpn {
   /// Enable or disable Basic Authentication for clients connecting to the Message VPN. The default value is `true`.
   #[serde(rename = "authenticationBasicEnabled")]
@@ -165,13 +165,13 @@ pub struct MsgVpn {
   #[serde(rename = "replicationBridgeAuthenticationBasicClientUsername")]
   replication_bridge_authentication_basic_client_username: Option<String>,
   /// The password the Replication Bridge uses to login to the Remote Message VPN on the Replication mate. The default is to have no password. The default is to have no `replicationBridgeAuthenticationBasicPassword`.
-  #[serde(rename = "replicationBridgeAuthenticationBasicPassword")]
+  #[serde(rename = "replicationBridgeAuthenticationBasicPassword", skip_serializing_if="Option::is_none")]
   replication_bridge_authentication_basic_password: Option<String>,
   /// The PEM formatted content for the client certificate used by this bridge to login to the Remote Message VPN. It must consist of a private key and between one and three certificates comprising the certificate trust chain. The default value is `\"\"`. Available since 2.9.
-  #[serde(rename = "replicationBridgeAuthenticationClientCertContent")]
+  #[serde(rename = "replicationBridgeAuthenticationClientCertContent", skip_serializing_if="Option::is_none")]
   replication_bridge_authentication_client_cert_content: Option<String>,
   /// The password for the client certificate used by this bridge to login to the Remote Message VPN. The default value is `\"\"`. Available since 2.9.
-  #[serde(rename = "replicationBridgeAuthenticationClientCertPassword")]
+  #[serde(rename = "replicationBridgeAuthenticationClientCertPassword", skip_serializing_if="Option::is_none")]
   replication_bridge_authentication_client_cert_password: Option<String>,
   /// The Authentication Scheme for the Replication Bridge in the Message VPN. The default value is `\"basic\"`. The allowed values and their meaning are:  <pre> \"basic\" - Basic Authentication Scheme (via username and password). \"client-certificate\" - Client Certificate Authentication Scheme (via certificate file or content). </pre> 
   #[serde(rename = "replicationBridgeAuthenticationScheme")]
@@ -192,10 +192,10 @@ pub struct MsgVpn {
   #[serde(rename = "replicationBridgeUnidirectionalClientProfileName")]
   replication_bridge_unidirectional_client_profile_name: Option<String>,
   /// Enable or disable the Replication feature for the Message VPN. The default value is `false`.
-  #[serde(rename = "replicationEnabled")]
+  #[serde(rename = "replicationEnabled", skip_serializing_if="Option::is_none")]
   replication_enabled: Option<bool>,
   /// The behavior to take when enabling the Replication feature for the Message VPN, depending on the existence of the Replication Queue. The default value is `\"fail-on-existing-queue\"`. The allowed values and their meaning are:  <pre> \"fail-on-existing-queue\" - The data replication queue must not already exist. \"force-use-existing-queue\" - The data replication queue must already exist. Any data messages on the Queue will be forwarded to interested applications. IMPORTANT: Before using this mode be certain that the messages are not stale or otherwise unsuitable to be forwarded. This mode can only be specified when the existing queue is configured the same as is currently specified under replication configuration otherwise the enabling of replication will fail. \"force-recreate-queue\" - The data replication queue must already exist. Any data messages on the Queue will be discarded. IMPORTANT: Before using this mode be certain that the messages on the existing data replication queue are not needed by interested applications. </pre> 
-  #[serde(rename = "replicationEnabledQueueBehavior")]
+  #[serde(rename = "replicationEnabledQueueBehavior", skip_serializing_if="Option::is_none")]
   replication_enabled_queue_behavior: Option<String>,
   /// The maximum Message Spool usage by the Replication Bridge Queue (quota), in megabytes. The default value is `60000`.
   #[serde(rename = "replicationQueueMaxMsgSpoolUsage")]
@@ -243,13 +243,13 @@ pub struct MsgVpn {
   #[serde(rename = "serviceAmqpPlainTextEnabled")]
   service_amqp_plain_text_enabled: Option<bool>,
   /// The port number for plain-text AMQP clients that connect to the Message VPN. The default is to have no `serviceAmqpPlainTextListenPort`. Available since 2.2.
-  #[serde(rename = "serviceAmqpPlainTextListenPort")]
+  #[serde(rename = "serviceAmqpPlainTextListenPort", skip_serializing_if="Option::is_none")]
   service_amqp_plain_text_listen_port: Option<i64>,
   /// Enable or disable the use of TLS for the AMQP service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is `false`. Available since 2.2.
   #[serde(rename = "serviceAmqpTlsEnabled")]
   service_amqp_tls_enabled: Option<bool>,
   /// The port number for AMQP clients that connect to the Message VPN over TLS. The default is to have no `serviceAmqpTlsListenPort`. Available since 2.2.
-  #[serde(rename = "serviceAmqpTlsListenPort")]
+  #[serde(rename = "serviceAmqpTlsListenPort", skip_serializing_if="Option::is_none")]
   service_amqp_tls_listen_port: Option<i64>,
   /// The maximum number of MQTT client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. Available since 2.1.
   #[serde(rename = "serviceMqttMaxConnectionCount")]
diff -upr ../solace_semp_client/output/rust/src/models/msg_vpn_acl_profile.rs ./src/models/msg_vpn_acl_profile.rs
--- ../solace_semp_client/output/rust/src/models/msg_vpn_acl_profile.rs	2019-03-03 08:19:54.000000000 +0100
+++ ./src/models/msg_vpn_acl_profile.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct MsgVpnAclProfile {
   /// The name of the ACL Profile.
   #[serde(rename = "aclProfileName")]
diff -upr ../solace_semp_client/output/rust/src/models/msg_vpn_client_profile.rs ./src/models/msg_vpn_client_profile.rs
--- ../solace_semp_client/output/rust/src/models/msg_vpn_client_profile.rs	2019-03-03 08:19:55.000000000 +0100
+++ ./src/models/msg_vpn_client_profile.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct MsgVpnClientProfile {
   /// Allow or deny Bridge clients to connect. Changing this setting does not affect existing Bridge client connections. The default value is `false`.
   #[serde(rename = "allowBridgeConnectionsEnabled")]
diff -upr ../solace_semp_client/output/rust/src/models/msg_vpn_client_username.rs ./src/models/msg_vpn_client_username.rs
--- ../solace_semp_client/output/rust/src/models/msg_vpn_client_username.rs	2019-03-03 08:19:55.000000000 +0100
+++ ./src/models/msg_vpn_client_username.rs	2019-03-03 10:17:29.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct MsgVpnClientUsername {
   /// The ACL Profile of the Client Username. The default value is `\"default\"`.
   #[serde(rename = "aclProfileName")]
@@ -33,7 +33,7 @@ pub struct MsgVpnClientUsername {
   #[serde(rename = "msgVpnName")]
   msg_vpn_name: Option<String>,
   /// The password of this Client Username for internal Authentication. The default is to have no password. The default is to have no `password`.
-  #[serde(rename = "password")]
+  #[serde(rename = "password", skip_serializing_if="Option::is_none")]
   password: Option<String>,
   /// Enables or disables the subscription management capability of the Client Username. This is the ability to manage subscriptions on behalf of other Client Usernames. The default value is `false`.
   #[serde(rename = "subscriptionManagerEnabled")]
diff -upr ../solace_semp_client/output/rust/src/models/msg_vpn_queue.rs ./src/models/msg_vpn_queue.rs
--- ../solace_semp_client/output/rust/src/models/msg_vpn_queue.rs	2019-03-03 08:19:56.000000000 +0100
+++ ./src/models/msg_vpn_queue.rs	2019-03-02 22:32:54.000000000 +0100
@@ -12,7 +12,7 @@
 #[allow(unused_imports)]
 use serde_json::Value;
 
-#[derive(Debug, Serialize, Deserialize)]
+#[derive(Debug, Serialize, Deserialize, Clone)]
 pub struct MsgVpnQueue {
   /// The Queue access type of either \"exclusive\" or \"non-exclusive\". The default value is `\"exclusive\"`. The allowed values and their meaning are:  <pre> \"exclusive\" - Exclusive delivery of messages to first bound client. \"non-exclusive\" - Non-exclusive delivery of messages to all bound clients. </pre> 
   #[serde(rename = "accessType")]
Only in .: target
